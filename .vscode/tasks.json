{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Compile headers",
            "type": "cppbuild",
            "command": "C:/msys64/ucrt64/bin/g++.exe",
            "args": [ // precompile headers
                "-c", "${workspaceFolder}/include/omniscript/omniscript_pch.h",
                "-std=c++23",
                "-fdiagnostics-color=always",        // Enable colored diagnostics
                "-g",                                // Add debug information
                // "-I", "${workspaceFolder}/dependencies/",
                // "-I", "${workspaceFolder}/dependencies/libcurl/include", 
                // "-L", "${workspaceFolder}/dependencies/libcurl/lib/dll-debug-x64",
                // // "-I", "${workspaceFolder}/dependencies/ffmpeg/include",
                // // "-L", "${workspaceFolder}/dependencies/ffmpeg/lib/x64",
                // // "-lavformat",
                // // "-lavcodec",
                // // "-lavutil",
                // // "-lswresample",
                // // "-lavfilter",
                // // "-lswscale",
                // // "-lavdevice",
                // // "-I", "${workspaceFolder}/dependencies/openal-soft/include",
                // // "-L", "${workspaceFolder}/dependencies/openal-soft/libs/Win64/",
                // // "-lOpenAL32",
                // // "-lglew32",                          // Link Glew
                // // "-lglfw3dll",                        // Link GLFW
                // // "-lopengl32",                        // Link OpenGL
                // // "-lgdi32",                           // Link GDI
                "-lpthread"                          // Link pthread
            ],
            "options": {
                "cwd": "${workspaceFolder}/src"       // Set the working directory to src
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": false,
            },
            "detail": "Task generated by VSCode"
        },
        {
            "label": "Build OmniScript++ debug",
            "type": "cppbuild",
            "command": "clang++",
            "args": [ // main build command
                "-std=c++23",
                "-fdiagnostics-color=always",        // Enable colored diagnostics
                "-g",                                // Add debug information
                "-o", "${workspaceFolder}/bin/osengine.exe", // Output executable
                // All .cpp files in src and subdirectories
                "${workspaceFolder}/src/*.cpp",
                "${workspaceFolder}/src/engine/*.cpp",
                "${workspaceFolder}/src/runtime/*.cpp", 
                // "${workspaceFolder}/src/runtime/graphics/*.cpp", 
                // "${workspaceFolder}/src/runtime/graphics/Events/*.cpp", 
                // "${workspaceFolder}/src/runtime/Audio/*.cpp", 
                // "${workspaceFolder}/src/runtime/io/*.cpp", 
                // "${workspaceFolder}/src/runtime/Math/*.cpp", 
                // "${workspaceFolder}/src/runtime/Time/*.cpp", 
                // "${workspaceFolder}/src/runtime/Json/*.cpp", 
                // "${workspaceFolder}/src/runtime/Date/*.cpp", 
                // "${workspaceFolder}/src/runtime/Path/*.cpp", 
                // // "${workspaceFolder}/src/runtime/Http/*.cpp", 
                // "${workspaceFolder}/src/runtime/OS/*.cpp", 
                
                "-I", "${workspaceFolder}/include",   // Include directory for headers
                // "-I", "${workspaceFolder}/dependencies/libcurl/include", 
                // "-L", "${workspaceFolder}/dependencies/libcurl/lib/static-debug-x64",
                // "-lcurl_a_debug",
                "-I", "C:/msys64/mingw64/include", // LLVM include directory
                "-L", "C:/msys64/mingw64/lib",     // LLVM library directory
                "-lLLVM-19",                         // Link against LLVM
                // // "-I", "${workspaceFolder}/dependencies/glfw/include", // Include GLFW headers
                // // "-L", "${workspaceFolder}/dependencies/glfw/lib",     // GLFW library directory
                // // "-I", "${workspaceFolder}/dependencies/glew/include/", // Include GLFW headers
                // // "-L", "${workspaceFolder}/dependencies/glew/lib/Release/x64",     // GLFW library directory
                // // "-I", "${workspaceFolder}/dependencies/glew/include/", // Include GLFW headers
                // // "-L", "${workspaceFolder}/dependencies/glew/lib/Release/x64",     // GLFW library directory
                // // "-I", "${workspaceFolder}/dependencies/",
                // // "-I", "${workspaceFolder}/dependencies/ffmpeg/include",
                // // "-L", "${workspaceFolder}/dependencies/ffmpeg/lib/x64",
                // // "-lavformat",
                // // "-lavcodec",
                // // "-lavutil",
                // // "-lswresample",
                // // "-lavfilter",
                // // "-lswscale",
                // // "-lavdevice",
                // // "-I", "${workspaceFolder}/dependencies/openal-soft/include",
                // // "-L", "${workspaceFolder}/dependencies/openal-soft/libs/Win64/",
                // // "-lOpenAL32",
                // // "-lglew32",                          // Link Glew
                // // "-lglfw3dll",                        // Link GLFW
                // // "-lopengl32",                        // Link OpenGL
                // // "-lgdi32",                           // Link GDI
                "-lpthread"                          // Link pthread
            ],
            "options": {
                "cwd": "${workspaceFolder}/src"       // Set the working directory to src
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by VSCode"
        },
        {
            "label": "Build OmniScript++ release",
            "type": "cppbuild",
            "command": "C:/msys64/ucrt64/bin/g++.exe",
            "args": [ // main build command
                "-fuse-ld=lld",
                "-std=c++23",
                "-fdiagnostics-color=always",        // Enable colored diagnostics
                "-g",                                // Add debug information
                "-o", "${workspaceFolder}/bin/osengine.exe", // Output executable
                // All .cpp files in src and subdirectories
                "${workspaceFolder}/src/*.cpp",
                "${workspaceFolder}/src/engine/*.cpp",
                "${workspaceFolder}/src/runtime/*.cpp", 
                // "${workspaceFolder}/src/runtime/graphics/*.cpp", 
                // "${workspaceFolder}/src/runtime/graphics/Events/*.cpp", 
                // "${workspaceFolder}/src/runtime/Audio/*.cpp", 

                "${workspaceFolder}/src/runtime/io/*.cpp", 
                "${workspaceFolder}/src/runtime/Math/*.cpp", 
                "${workspaceFolder}/src/runtime/Time/*.cpp", 
                "${workspaceFolder}/src/runtime/Json/*.cpp", 
                "${workspaceFolder}/src/runtime/Date/*.cpp", 
                "${workspaceFolder}/src/runtime/Path/*.cpp", 
                "${workspaceFolder}/src/runtime/Http/*.cpp", 
                "${workspaceFolder}/src/runtime/OS/*.cpp", 
                
                "-I", "${workspaceFolder}/include",   // Include directory for headers
                "-I", "${workspaceFolder}/dependencies/libcurl/include", 
                "-L", "${workspaceFolder}/dependencies/libcurl/lib/dll-debug-x64",
                "-lcurl_debug",
                // // "-I", "C:/msys64/mingw64/include", // LLVM include directory
                // // "-L", "C:/msys64/mingw64/lib",     // LLVM library directory
                // // "-lLLVM-18",                         // Link against LLVM
                // // "-I", "${workspaceFolder}/dependencies/glfw/include", // Include GLFW headers
                // // "-L", "${workspaceFolder}/dependencies/glfw/lib",     // GLFW library directory
                // // "-I", "${workspaceFolder}/dependencies/glew/include/", // Include GLFW headers
                // // "-L", "${workspaceFolder}/dependencies/glew/lib/Release/x64",     // GLFW library directory
                // // "-I", "${workspaceFolder}/dependencies/glew/include/", // Include GLFW headers
                // // "-L", "${workspaceFolder}/dependencies/glew/lib/Release/x64",     // GLFW library directory
                // // "-I", "${workspaceFolder}/dependencies/",
                // // "-I", "${workspaceFolder}/dependencies/ffmpeg/include",
                // // "-L", "${workspaceFolder}/dependencies/ffmpeg/lib/x64",
                // // "-lavformat",
                // // "-lavcodec",
                // // "-lavutil",
                // // "-lswresample",
                // // "-lavfilter",
                // // "-lswscale",
                // // "-lavdevice",
                // // "-I", "${workspaceFolder}/dependencies/openal-soft/include",
                // // "-L", "${workspaceFolder}/dependencies/openal-soft/libs/Win64/",
                // // "-lOpenAL32",
                // // "-lglew32",                          // Link Glew
                // // "-lglfw3dll",                        // Link GLFW
                // // "-lopengl32",                        // Link OpenGL
                // // "-lgdi32",                           // Link GDI
                "-lpthread"                          // Link pthread
            ],
            "options": {
                "cwd": "${workspaceFolder}/src"       // Set the working directory to src
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": false,
            },
            "detail": "Task generated by VSCode"
        }
    ]
}
